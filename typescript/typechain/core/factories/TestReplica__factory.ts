/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestReplica, TestReplicaInterface } from "../TestReplica";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "newRoot",
        type: "bytes32[2]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature2",
        type: "bytes",
      },
    ],
    name: "DoubleUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldUpdater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newUpdater",
        type: "address",
      },
    ],
    name: "NewUpdater",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousConfirmAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newConfirmAt",
        type: "uint256",
      },
    ],
    name: "SetConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "SetOptimisticTimeout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "acceptableRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "committedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "confirmAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "_newRoot",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature2",
        type: "bytes",
      },
    ],
    name: "doubleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_committedRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Replica.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remoteDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "setCommittedRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_confirmAt",
        type: "uint256",
      },
    ],
    name: "setConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "setMessagePending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "setOptimisticTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
    ],
    name: "setRemoteDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum NomadBase.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "testBranchRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testHomeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testProcess",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516138453803806138458339818101604052606081101561003357600080fd5b50516001600160e01b031960e082901b16608052620cf85060a0819052613a9860c081905263ffffffff909216916137ad61009860003980610c8e528061138b52508061136a528061164b5280611bc85250806110e6528061113a52506137ad6000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c80638da5cb5b1161012a578063b31c01fb116100bd578063d88beda21161008c578063e7e7a7b711610071578063e7e7a7b714610888578063f2fde38b146108d3578063ffa1ad74146109065761020b565b8063d88beda214610878578063df034cd0146108805761020b565b8063b31c01fb14610710578063b61c19e8146107c2578063b80777ea14610868578063c19d93fb146108705761020b565b80639868a273116100f95780639868a273146106795780639d54f419146106a3578063a33a3113146106d6578063a3f81d68146106f35761020b565b80638da5cb5b146104f4578063928bc4b214610525578063961681dc146105cb57806396ae1a89146105d35761020b565b80635146366e116101a2578063715018a611610171578063715018a61461049157806371bfb7b814610499578063885b5e2d146104b65780638d3638f4146104d35761020b565b80635146366e146103b057806351d7bcd7146103b85780636188af0e146103db57806367a6771d146104895761020b565b80632bbd59ca116101de5780632bbd59ca14610324578063371d30711461036257806339992668146103a057806345630b1a146103a85761020b565b8063088b5ed314610210578063146901db1461023557806319d9d21a1461023d57806325e3beda1461030a575b600080fd5b6102336004803603604081101561022657600080fd5b5080359060200135610924565b005b610233610a25565b610233600480360360a081101561025357600080fd5b813591602081019181019060808101606082013564010000000081111561027957600080fd5b82018360208201111561028b57600080fd5b803590602001918460018302840111640100000000831117156102ad57600080fd5b9193909290916020810190356401000000008111156102cb57600080fd5b8201836020820111156102dd57600080fd5b803590602001918460018302840111640100000000831117156102ff57600080fd5b509092509050610a2f565b610312610c8c565b60408051918252519081900360200190f35b6103416004803603602081101561033a57600080fd5b5035610cb0565b6040518082600281111561035157fe5b815260200191505060405180910390f35b61038c600480360361044081101561037957600080fd5b5080359060208101906104200135610cc5565b604080519115158252519081900360200190f35b610312610de5565b610312610deb565b610312610e05565b610233600480360360208110156103ce57600080fd5b503563ffffffff16610e0f565b61023360048036036104408110156103f257600080fd5b81019060208101813564010000000081111561040d57600080fd5b82018360208201111561041f57600080fd5b8035906020019184600183028401116401000000008311171561044157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955092935050506104008201359050610e46565b610312610ed2565b610233610ed8565b610312600480360360208110156104af57600080fd5b5035610fef565b610233600480360360208110156104cc57600080fd5b5035611001565b6104db6110e4565b6040805163ffffffff9092168252519081900360200190f35b6104fc611108565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61038c6004803603602081101561053b57600080fd5b81019060208101813564010000000081111561055657600080fd5b82018360208201111561056857600080fd5b8035906020019184600183028401116401000000008311171561058a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611124945050505050565b6104db611778565b61038c600480360360208110156105e957600080fd5b81019060208101813564010000000081111561060457600080fd5b82018360208201111561061657600080fd5b8035906020019184600183028401116401000000008311171561063857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611784945050505050565b610312600480360361044081101561069057600080fd5b5080359060208101906104200135611795565b610233600480360360208110156106b957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166117d3565b610233600480360360208110156106ec57600080fd5b5035611887565b61038c6004803603602081101561070957600080fd5b50356118a0565b6102336004803603606081101561072657600080fd5b81359160208101359181019060608101604082013564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506118c9945050505050565b610233600480360360208110156107d857600080fd5b8101906020810181356401000000008111156107f357600080fd5b82018360208201111561080557600080fd5b8035906020019184600183028401116401000000008311171561082757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611b17945050505050565b610312611ba1565b610341611ba5565b610312611bc6565b6104fc611bea565b6102336004803603608081101561089e57600080fd5b5063ffffffff8135169073ffffffffffffffffffffffffffffffffffffffff6020820135169060408101359060600135611c06565b610233600480360360208110156108e957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611dd8565b61090e611f7a565b6040805160ff9092168252519081900360200190f35b61092c611f7f565b73ffffffffffffffffffffffffffffffffffffffff1661094a611108565b73ffffffffffffffffffffffffffffffffffffffff16146109cc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008281526099602090815260409182902080549084905582518181529182018490528251909285927fe906d465281862f8f37a1bdd7d810e50347f06b0b493701cca6ccb8e6a7b2694929081900390910190a2505050565b610a2d611f83565b565b600260655474010000000000000000000000000000000000000000900460ff166002811115610a5a57fe5b1415610ac757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516020601f8601819004810282018101909252848152610b099188918835918890889081908401838280828437600092019190915250611fc492505050565b8015610b585750610b5886866001602002013584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611fc492505050565b8015610b6957508435602086013514155b15610c8457610b76610a25565b7f2c3f60bab4170347826231b75a920b5053941ddebc6eed6fd2c25721648b186f8686868686866040518087815260200186600260200280828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910182810360409081018252810186905290506020810160608201878780828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910184810383528581526020019050858580828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092018290039a509098505050505050505050a15b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b609a6020526000908152604090205460ff1681565b6000806000858152609a602052604090205460ff166002811115610ce557fe5b14610d5157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f214d6573736167655374617475732e4e6f6e6500000000000000000000000000604482015290519081900360640190fd5b6000610d878585602080602002604051908101604052809291908260208002808284376000920191909152508791506120569050565b9050610d92816118a0565b15610dd85750506000838152609a6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155610dde565b60009150505b9392505050565b60975481565b609654600090610e009063ffffffff16612101565b905090565b6000610e00610deb565b609680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b610e5883805190602001208383610cc5565b610ec357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f76650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610ecc83611124565b50505050565b60665481565b610ee0611f7f565b73ffffffffffffffffffffffffffffffffffffffff16610efe611108565b73ffffffffffffffffffffffffffffffffffffffff1614610f8057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60335460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60996020526000908152604090205481565b611009611f7f565b73ffffffffffffffffffffffffffffffffffffffff16611027611108565b73ffffffffffffffffffffffffffffffffffffffff16146110a957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60978190556040805182815290517fa8de34d9c26dbb20579bc8c8957813e3168af7c5092d7668390e34471dc4ffb49181900360200190a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b60335473ffffffffffffffffffffffffffffffffffffffff1690565b6000806111318382612176565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166111857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831661219a565b63ffffffff16146111f757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2164657374696e6174696f6e0000000000000000000000000000000000000000604482015290519081900360640190fd5b60006112247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166121cb565b905060016000828152609a602052604090205460ff16600281111561124557fe5b146112b157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2170726f76656e00000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60985460ff1660011461132557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217265656e7472616e7400000000000000000000000000000000000000000000604482015290519081900360640190fd5b609880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009081169091556000828152609a60205260409020805490911660021790557f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000015a101561141b57604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048083019190915260248201527f2167617300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006114487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000841661220a565b905060006114777fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851661221d565b6114a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861661224d565b6114cd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000871661227e565b6115226114fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000089166122af565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016612320565b604051602401808563ffffffff1681526020018463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611580578181015183820152602001611568565b50505050905090810190601f1680156115ad5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fab2dc3f50000000000000000000000000000000000000000000000000000000017905296506060955061167794505073ffffffffffffffffffffffffffffffffffffffff871692507f00000000000000000000000000000000000000000000000000000000000000009150610100905085612364565b60405181519298509092508291819060208401908083835b602083106116cc57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161168f565b5181516020939093036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018019909116921691909117905260405192018290038220935050881515915086907fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890600090a45050609880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905550919392505050565b60965463ffffffff1681565b600061178f82611124565b92915050565b60006117cb8484602080602002604051908101604052809291908260208002808284376000920191909152508691506120569050565b949350505050565b6117db611f7f565b73ffffffffffffffffffffffffffffffffffffffff166117f9611108565b73ffffffffffffffffffffffffffffffffffffffff161461187b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b611884816123ea565b50565b6066819055600090815260996020526040902060019055565b600081815260996020526040812054806118be5760009150506118c4565b42101590505b919050565b600260655474010000000000000000000000000000000000000000900460ff1660028111156118f457fe5b141561196157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b60665483146119d157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742063757272656e74207570646174650000000000000000000000000000604482015290519081900360640190fd5b6119dc838383611fc4565b611a4757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2175706461746572207369670000000000000000000000000000000000000000604482015290519081900360640190fd5b611a4f610a2d565b6097546000838152609960209081526040808320429094019093556066859055609654835182815285518184015285518795899563ffffffff909416947f608828ad904a0c9250c09004ba7226efb08f35a5c815bb3f76b5a8a271cd08b29489949384938401928601918190849084905b83811015611ad8578181015183820152602001611ac0565b50505050905090810190601f168015611b055780820380516001836020036101000a031916815260200191505b509250505060405180910390a4505050565b6000611b238282612176565b90506001609a6000611b567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000085166121cb565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115611b9857fe5b02179055505050565b4290565b60655474010000000000000000000000000000000000000000900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60655473ffffffffffffffffffffffffffffffffffffffff1681565b600054610100900460ff1680611c1f5750611c1f612472565b80611c2d575060005460ff16155b611c82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613666602e913960400191505060405180910390fd5b600054610100900460ff16158015611ce857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b611cf184612483565b6098805460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091168117909155609680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff88161790556066849055600084815260996020908152604091829020929092556097849055805184815290517fa8de34d9c26dbb20579bc8c8957813e3168af7c5092d7668390e34471dc4ffb4929181900390910190a18015611dd157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050505050565b611de0611f7f565b73ffffffffffffffffffffffffffffffffffffffff16611dfe611108565b73ffffffffffffffffffffffffffffffffffffffff1614611e8057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116611eec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806135fd6026913960400191505060405180910390fd5b60335460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600081565b3390565b606580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674020000000000000000000000000000000000000000179055565b600080611fcf610deb565b8585604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050612010816125e8565b60655490915073ffffffffffffffffffffffffffffffffffffffff166120368285612639565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b8260005b60208110156120f957600183821c16600085836020811061207757fe5b6020020151905081600114156120bd57808460405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093506120ef565b838160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093505b505060010161205a565b509392505050565b6040805160e09290921b7fffffffff00000000000000000000000000000000000000000000000000000000166020808401919091527f4e4f4d41440000000000000000000000000000000000000000000000000000006024840152815180840360090181526029909301909152815191012090565b81516000906020840161219164ffffffffff851682846126d3565b95945050505050565b600061178f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831660286004612729565b6000806121d78361274a565b6bffffffffffffffffffffffff16905060006121f28461275e565b6bffffffffffffffffffffffff169091209392505050565b600061178f61221883612772565b6127a3565b600061178f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316826004612729565b600061178f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831660246004612729565b600061178f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316600460206127a6565b600061178f604c806122e27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861661275e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861692916bffffffffffffffffffffffff91909116036000612951565b606060008061232e8461275e565b6bffffffffffffffffffffffff169050604051915081925061235384836020016129d7565b508181016020016040529052919050565b6000606060008060008667ffffffffffffffff8111801561238457600080fd5b506040519080825280601f01601f1916602001820160405280156123af576020820181803683370190505b50905060008087516020890160008d8df191503d9250868311156123d1578692505b828152826000602083013e909890975095505050505050565b6065805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040805191909216808252602082019390935281517f0f20622a7af9e952a6fec654a196f29e04477b5d335772c26902bec35cc9f22a929181900390910190a15050565b600061247d30612b03565b15905090565b600054610100900460ff168061249c575061249c612472565b806124aa575060005460ff16155b6124ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613666602e913960400191505060405180910390fd5b600054610100900460ff1615801561256557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b61256d612b09565b612576826123ea565b606580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000017905580156125e457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600081516041146126ab57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a6126c986828585612c2c565b9695505050505050565b6000806126e08484612e1a565b90506040518111156126f0575060005b8061271e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610dde565b612191858585612e8c565b60008160200360080260ff166127408585856127a6565b901c949350505050565b60781c6bffffffffffffffffffffffff1690565b60181c6bffffffffffffffffffffffff1690565b600061178f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602c60206127a6565b90565b600060ff82166127b857506000610dde565b6127c18461275e565b6bffffffffffffffffffffffff166127dc8460ff8516612e1a565b11156128bb5761281d6127ee8561274a565b6bffffffffffffffffffffffff166128058661275e565b6bffffffffffffffffffffffff16858560ff16612e9f565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612880578181015183820152602001612868565b50505050905090810190601f1680156128ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff161115612918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a8152602001806136b6603a913960400191505060405180910390fd5b6008820260006129278661274a565b6bffffffffffffffffffffffff169050600061294283612ffa565b91909501511695945050505050565b60008061295d8661274a565b6bffffffffffffffffffffffff16905061297686613043565b61298a856129848489612e1a565b90612e1a565b11156129b9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009150506117cb565b6129c38186612e1a565b90506126c98364ffffffffff1682866126d3565b60006129e28361306d565b612a37576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806136f06028913960400191505060405180910390fd5b612a408361307f565b612a95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613718602b913960400191505060405180910390fd5b6000612aa08461275e565b6bffffffffffffffffffffffff1690506000612abb8561274a565b6bffffffffffffffffffffffff1690506000604051905084811115612ae05760206060fd5b8285848460045afa506126c9612af5876130bc565b64ffffffffff168685612e8c565b3b151590565b600054610100900460ff1680612b225750612b22612472565b80612b30575060005460ff16155b612b85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613666602e913960400191505060405180910390fd5b600054610100900460ff16158015612beb57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b612bf36130c2565b612bfb6131d4565b801561188457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612ca7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806136236022913960400191505060405180910390fd5b8360ff16601b1480612cbc57508360ff16601c145b612d11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806136946022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612d6d573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661219157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b8181018281101561178f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b60606000612eac86613364565b9150506000612eba86613364565b9150506000612ec886613364565b9150506000612ed686613364565b915050838383836040516020018080613743603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a820152605001602161364582397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b600061304e8261275e565b6130578361274a565b016bffffffffffffffffffffffff169050919050565b600061307882613438565b1592915050565b600061308a826130bc565b64ffffffffff1664ffffffffff14156130a5575060006118c4565b60006130b083613043565b60405110199392505050565b60d81c90565b600054610100900460ff16806130db57506130db612472565b806130e9575060005460ff16155b61313e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613666602e913960400191505060405180910390fd5b600054610100900460ff16158015612bfb57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff90911661010017166001179055801561188457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600054610100900460ff16806131ed57506131ed612472565b806131fb575060005460ff16155b613250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613666602e913960400191505060405180910390fd5b600054610100900460ff161580156132b657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b60006132c0611f7f565b603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350801561188457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600080601f5b600f8160ff1611156133cc5760ff600882021684901c61338981613460565b61ffff16841793508160ff166010146133a457601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161336a565b50600f5b60ff8160ff1610156134325760ff600882021684901c6133ef81613460565b61ffff16831792508160ff1660001461340a57601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016133d0565b50915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009081161490565b600061347260048360ff16901c613490565b60ff161760081b62ffff001661348782613490565b60ff1617919050565b600060f08083179060ff821614156134ac5760309150506118c4565b8060ff1660f114156134c25760319150506118c4565b8060ff1660f214156134d85760329150506118c4565b8060ff1660f314156134ee5760339150506118c4565b8060ff1660f414156135045760349150506118c4565b8060ff1660f5141561351a5760359150506118c4565b8060ff1660f614156135305760369150506118c4565b8060ff1660f714156135465760379150506118c4565b8060ff1660f8141561355c5760389150506118c4565b8060ff1660f914156135725760399150506118c4565b8060ff1660fa14156135885760619150506118c4565b8060ff1660fb141561359e5760629150506118c4565b8060ff1660fc14156135b45760639150506118c4565b8060ff1660fd14156135ca5760649150506118c4565b8060ff1660fe14156135e05760659150506118c4565b8060ff1660ff14156135f65760669150506118c4565b5091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345434453413a20696e76616c6964207369676e6174757265202773272076616c75652e20417474656d7074656420746f20696e646578206174206f6666736574203078496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c756554797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f636f7079546f202d204e756c6c20706f696e74657220646572656654797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e74657220646572656654797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a2646970667358221220009b7aef00f57de0725318cc83c4a798e715d5a9ef33d2b82a03bbd67ddf730c64736f6c63430007060033";

export class TestReplica__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReplica> {
    return super.deploy(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    ) as Promise<TestReplica>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    );
  }
  attach(address: string): TestReplica {
    return super.attach(address) as TestReplica;
  }
  connect(signer: Signer): TestReplica__factory {
    return super.connect(signer) as TestReplica__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReplicaInterface {
    return new utils.Interface(_abi) as TestReplicaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReplica {
    return new Contract(address, _abi, signerOrProvider) as TestReplica;
  }
}
