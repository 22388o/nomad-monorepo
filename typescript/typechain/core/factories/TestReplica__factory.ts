/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestReplica, TestReplicaInterface } from "../TestReplica";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "newRoot",
        type: "bytes32[2]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature2",
        type: "bytes",
      },
    ],
    name: "DoubleUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldUpdater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newUpdater",
        type: "address",
      },
    ],
    name: "NewUpdater",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousConfirmAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newConfirmAt",
        type: "uint256",
      },
    ],
    name: "SetConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "SetOptimisticTimeout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "acceptableRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "committedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "confirmAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "_newRoot",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature2",
        type: "bytes",
      },
    ],
    name: "doubleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_committedRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Replica.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remoteDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "setCommittedRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_confirmAt",
        type: "uint256",
      },
    ],
    name: "setConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "setMessagePending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "setOptimisticTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
    ],
    name: "setRemoteDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum NomadBase.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "testBranchRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testHomeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testProcess",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516137e73803806137e78339818101604052606081101561003357600080fd5b50516001600160e01b031960e082901b16608052620cf85060a0819052613a9860c081905263ffffffff9092169161374f61009860003980610c8e528061138b52508061136a52806114625280611bf05250806110e6528061113a525061374f6000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c80638da5cb5b1161012a578063b31c01fb116100bd578063d88beda21161008c578063e7e7a7b711610071578063e7e7a7b714610888578063f2fde38b146108d3578063ffa1ad74146109065761020b565b8063d88beda214610878578063df034cd0146108805761020b565b8063b31c01fb14610710578063b61c19e8146107c2578063b80777ea14610868578063c19d93fb146108705761020b565b80639868a273116100f95780639868a273146106795780639d54f419146106a3578063a33a3113146106d6578063a3f81d68146106f35761020b565b80638da5cb5b146104f4578063928bc4b214610525578063961681dc146105cb57806396ae1a89146105d35761020b565b80635146366e116101a2578063715018a611610171578063715018a61461049157806371bfb7b814610499578063885b5e2d146104b65780638d3638f4146104d35761020b565b80635146366e146103b057806351d7bcd7146103b85780636188af0e146103db57806367a6771d146104895761020b565b80632bbd59ca116101de5780632bbd59ca14610324578063371d30711461036257806339992668146103a057806345630b1a146103a85761020b565b8063088b5ed314610210578063146901db1461023557806319d9d21a1461023d57806325e3beda1461030a575b600080fd5b6102336004803603604081101561022657600080fd5b5080359060200135610924565b005b610233610a25565b610233600480360360a081101561025357600080fd5b813591602081019181019060808101606082013564010000000081111561027957600080fd5b82018360208201111561028b57600080fd5b803590602001918460018302840111640100000000831117156102ad57600080fd5b9193909290916020810190356401000000008111156102cb57600080fd5b8201836020820111156102dd57600080fd5b803590602001918460018302840111640100000000831117156102ff57600080fd5b509092509050610a2f565b610312610c8c565b60408051918252519081900360200190f35b6103416004803603602081101561033a57600080fd5b5035610cb0565b6040518082600281111561035157fe5b815260200191505060405180910390f35b61038c600480360361044081101561037957600080fd5b5080359060208101906104200135610cc5565b604080519115158252519081900360200190f35b610312610de5565b610312610deb565b610312610e05565b610233600480360360208110156103ce57600080fd5b503563ffffffff16610e0f565b61023360048036036104408110156103f257600080fd5b81019060208101813564010000000081111561040d57600080fd5b82018360208201111561041f57600080fd5b8035906020019184600183028401116401000000008311171561044157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955092935050506104008201359050610e46565b610312610ed2565b610233610ed8565b610312600480360360208110156104af57600080fd5b5035610fef565b610233600480360360208110156104cc57600080fd5b5035611001565b6104db6110e4565b6040805163ffffffff9092168252519081900360200190f35b6104fc611108565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61038c6004803603602081101561053b57600080fd5b81019060208101813564010000000081111561055657600080fd5b82018360208201111561056857600080fd5b8035906020019184600183028401116401000000008311171561058a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611124945050505050565b6104db6117a0565b61038c600480360360208110156105e957600080fd5b81019060208101813564010000000081111561060457600080fd5b82018360208201111561061657600080fd5b8035906020019184600183028401116401000000008311171561063857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117ac945050505050565b610312600480360361044081101561069057600080fd5b50803590602081019061042001356117bd565b610233600480360360208110156106b957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166117fb565b610233600480360360208110156106ec57600080fd5b50356118af565b61038c6004803603602081101561070957600080fd5b50356118c8565b6102336004803603606081101561072657600080fd5b81359160208101359181019060608101604082013564010000000081111561074d57600080fd5b82018360208201111561075f57600080fd5b8035906020019184600183028401116401000000008311171561078157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506118f1945050505050565b610233600480360360208110156107d857600080fd5b8101906020810181356401000000008111156107f357600080fd5b82018360208201111561080557600080fd5b8035906020019184600183028401116401000000008311171561082757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611b3f945050505050565b610312611bc9565b610341611bcd565b610312611bee565b6104fc611c12565b6102336004803603608081101561089e57600080fd5b5063ffffffff8135169073ffffffffffffffffffffffffffffffffffffffff6020820135169060408101359060600135611c2e565b610233600480360360208110156108e957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611e00565b61090e611fa2565b6040805160ff9092168252519081900360200190f35b61092c611fa7565b73ffffffffffffffffffffffffffffffffffffffff1661094a611108565b73ffffffffffffffffffffffffffffffffffffffff16146109cc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008281526099602090815260409182902080549084905582518181529182018490528251909285927fe906d465281862f8f37a1bdd7d810e50347f06b0b493701cca6ccb8e6a7b2694929081900390910190a2505050565b610a2d611fab565b565b600260655474010000000000000000000000000000000000000000900460ff166002811115610a5a57fe5b1415610ac757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516020601f8601819004810282018101909252848152610b099188918835918890889081908401838280828437600092019190915250611fec92505050565b8015610b585750610b5886866001602002013584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611fec92505050565b8015610b6957508435602086013514155b15610c8457610b76610a25565b7f2c3f60bab4170347826231b75a920b5053941ddebc6eed6fd2c25721648b186f8686868686866040518087815260200186600260200280828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910182810360409081018252810186905290506020810160608201878780828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910184810383528581526020019050858580828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092018290039a509098505050505050505050a15b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b609a6020526000908152604090205460ff1681565b6000806000858152609a602052604090205460ff166002811115610ce557fe5b14610d5157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f214d6573736167655374617475732e4e6f6e6500000000000000000000000000604482015290519081900360640190fd5b6000610d8785856020806020026040519081016040528092919082602080028082843760009201919091525087915061207e9050565b9050610d92816118c8565b15610dd85750506000838152609a6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155610dde565b60009150505b9392505050565b60975481565b609654600090610e009063ffffffff16612129565b905090565b6000610e00610deb565b609680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b610e5883805190602001208383610cc5565b610ec357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f76650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610ecc83611124565b50505050565b60665481565b610ee0611fa7565b73ffffffffffffffffffffffffffffffffffffffff16610efe611108565b73ffffffffffffffffffffffffffffffffffffffff1614610f8057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60335460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60996020526000908152604090205481565b611009611fa7565b73ffffffffffffffffffffffffffffffffffffffff16611027611108565b73ffffffffffffffffffffffffffffffffffffffff16146110a957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60978190556040805182815290517fa8de34d9c26dbb20579bc8c8957813e3168af7c5092d7668390e34471dc4ffb49181900360200190a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b60335473ffffffffffffffffffffffffffffffffffffffff1690565b600080611131838261219e565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166111857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166121c2565b63ffffffff16146111f757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2164657374696e6174696f6e0000000000000000000000000000000000000000604482015290519081900360640190fd5b60006112247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166121f3565b905060016000828152609a602052604090205460ff16600281111561124557fe5b146112b157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2170726f76656e00000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60985460ff1660011461132557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217265656e7472616e7400000000000000000000000000000000000000000000604482015290519081900360640190fd5b609880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009081169091556000828152609a60205260409020805490911660021790557f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000015a101561141b57604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048083019190915260248201527f2167617300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006114487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008416612232565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006114c17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008916612245565b6114ec7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008a16612275565b6115177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008b166122a6565b61156c6115457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008d166122d7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016612348565b604051602401808563ffffffff1681526020018463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156115ca5781810151838201526020016115b2565b50505050905090810190601f1680156115f75780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fab2dc3f50000000000000000000000000000000000000000000000000000000017815281519198506000975087965090945092508491508b905088f198503d945083851115611698578394505b848252846000602084013e816040518082805190602001908083835b602083106116f157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016116b4565b5181516020939093036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180199091169216919091179052604051920182900382209350508b1515915089907fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890600090a45050609880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905550949695505050505050565b60965463ffffffff1681565b60006117b782611124565b92915050565b60006117f384846020806020026040519081016040528092919082602080028082843760009201919091525086915061207e9050565b949350505050565b611803611fa7565b73ffffffffffffffffffffffffffffffffffffffff16611821611108565b73ffffffffffffffffffffffffffffffffffffffff16146118a357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6118ac8161238c565b50565b6066819055600090815260996020526040902060019055565b600081815260996020526040812054806118e65760009150506118ec565b42101590505b919050565b600260655474010000000000000000000000000000000000000000900460ff16600281111561191c57fe5b141561198957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b60665483146119f957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742063757272656e74207570646174650000000000000000000000000000604482015290519081900360640190fd5b611a04838383611fec565b611a6f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2175706461746572207369670000000000000000000000000000000000000000604482015290519081900360640190fd5b611a77610a2d565b6097546000838152609960209081526040808320429094019093556066859055609654835182815285518184015285518795899563ffffffff909416947f608828ad904a0c9250c09004ba7226efb08f35a5c815bb3f76b5a8a271cd08b29489949384938401928601918190849084905b83811015611b00578181015183820152602001611ae8565b50505050905090810190601f168015611b2d5780820380516001836020036101000a031916815260200191505b509250505060405180910390a4505050565b6000611b4b828261219e565b90506001609a6000611b7e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000085166121f3565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115611bc057fe5b02179055505050565b4290565b60655474010000000000000000000000000000000000000000900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60655473ffffffffffffffffffffffffffffffffffffffff1681565b600054610100900460ff1680611c475750611c47612414565b80611c55575060005460ff16155b611caa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613608602e913960400191505060405180910390fd5b600054610100900460ff16158015611d1057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b611d1984612425565b6098805460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091168117909155609680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff88161790556066849055600084815260996020908152604091829020929092556097849055805184815290517fa8de34d9c26dbb20579bc8c8957813e3168af7c5092d7668390e34471dc4ffb4929181900390910190a18015611df957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050505050565b611e08611fa7565b73ffffffffffffffffffffffffffffffffffffffff16611e26611108565b73ffffffffffffffffffffffffffffffffffffffff1614611ea857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116611f14576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061359f6026913960400191505060405180910390fd5b60335460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600081565b3390565b606580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674020000000000000000000000000000000000000000179055565b600080611ff7610deb565b85856040516020018084815260200183815260200182815260200193505050506040516020818303038152906040528051906020012090506120388161258a565b60655490915073ffffffffffffffffffffffffffffffffffffffff1661205e82856125db565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b8260005b602081101561212157600183821c16600085836020811061209f57fe5b6020020151905081600114156120e55780846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209350612117565b838160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093505b5050600101612082565b509392505050565b6040805160e09290921b7fffffffff00000000000000000000000000000000000000000000000000000000166020808401919091527f4e4f4d41440000000000000000000000000000000000000000000000000000006024840152815180840360090181526029909301909152815191012090565b8151600090602084016121b964ffffffffff85168284612675565b95945050505050565b60006117b77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602860046126cb565b6000806121ff836126ec565b6bffffffffffffffffffffffff169050600061221a84612700565b6bffffffffffffffffffffffff169091209392505050565b60006117b761224083612714565b612745565b60006117b77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083168260046126cb565b60006117b77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602460046126cb565b60006117b77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831660046020612748565b60006117b7604c8061230a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008616612700565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861692916bffffffffffffffffffffffff919091160360006128f3565b606060008061235684612700565b6bffffffffffffffffffffffff169050604051915081925061237b8483602001612979565b508181016020016040529052919050565b6065805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040805191909216808252602082019390935281517f0f20622a7af9e952a6fec654a196f29e04477b5d335772c26902bec35cc9f22a929181900390910190a15050565b600061241f30612aa5565b15905090565b600054610100900460ff168061243e575061243e612414565b8061244c575060005460ff16155b6124a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613608602e913960400191505060405180910390fd5b600054610100900460ff1615801561250757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b61250f612aab565b6125188261238c565b606580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055801561258657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b6000815160411461264d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a61266b86828585612bce565b9695505050505050565b6000806126828484612dbc565b9050604051811115612692575060005b806126c0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610dde565b6121b9858585612e2e565b60008160200360080260ff166126e2858585612748565b901c949350505050565b60781c6bffffffffffffffffffffffff1690565b60181c6bffffffffffffffffffffffff1690565b60006117b77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602c6020612748565b90565b600060ff821661275a57506000610dde565b61276384612700565b6bffffffffffffffffffffffff1661277e8460ff8516612dbc565b111561285d576127bf612790856126ec565b6bffffffffffffffffffffffff166127a786612700565b6bffffffffffffffffffffffff16858560ff16612e41565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561282257818101518382015260200161280a565b50505050905090810190601f16801561284f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff1611156128ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180613658603a913960400191505060405180910390fd5b6008820260006128c9866126ec565b6bffffffffffffffffffffffff16905060006128e483612f9c565b91909501511695945050505050565b6000806128ff866126ec565b6bffffffffffffffffffffffff16905061291886612fe5565b61292c856129268489612dbc565b90612dbc565b111561295b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009150506117f3565b6129658186612dbc565b905061266b8364ffffffffff168286612675565b60006129848361300f565b6129d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806136926028913960400191505060405180910390fd5b6129e283613021565b612a37576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806136ba602b913960400191505060405180910390fd5b6000612a4284612700565b6bffffffffffffffffffffffff1690506000612a5d856126ec565b6bffffffffffffffffffffffff1690506000604051905084811115612a825760206060fd5b8285848460045afa5061266b612a978761305e565b64ffffffffff168685612e2e565b3b151590565b600054610100900460ff1680612ac45750612ac4612414565b80612ad2575060005460ff16155b612b27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613608602e913960400191505060405180910390fd5b600054610100900460ff16158015612b8d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b612b95613064565b612b9d613176565b80156118ac57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612c49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135c56022913960400191505060405180910390fd5b8360ff16601b1480612c5e57508360ff16601c145b612cb3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806136366022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612d0f573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166121b957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b818101828110156117b757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b60606000612e4e86613306565b9150506000612e5c86613306565b9150506000612e6a86613306565b9150506000612e7886613306565b9150508383838360405160200180806136e5603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a82015260500160216135e782397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b6000612ff082612700565b612ff9836126ec565b016bffffffffffffffffffffffff169050919050565b600061301a826133da565b1592915050565b600061302c8261305e565b64ffffffffff1664ffffffffff1415613047575060006118ec565b600061305283612fe5565b60405110199392505050565b60d81c90565b600054610100900460ff168061307d575061307d612414565b8061308b575060005460ff16155b6130e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613608602e913960400191505060405180910390fd5b600054610100900460ff16158015612b9d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff9091166101001716600117905580156118ac57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600054610100900460ff168061318f575061318f612414565b8061319d575060005460ff16155b6131f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613608602e913960400191505060405180910390fd5b600054610100900460ff1615801561325857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6000613262611fa7565b603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156118ac57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600080601f5b600f8160ff16111561336e5760ff600882021684901c61332b81613402565b61ffff16841793508160ff1660101461334657601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161330c565b50600f5b60ff8160ff1610156133d45760ff600882021684901c61339181613402565b61ffff16831792508160ff166000146133ac57601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01613372565b50915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009081161490565b600061341460048360ff16901c613432565b60ff161760081b62ffff001661342982613432565b60ff1617919050565b600060f08083179060ff8216141561344e5760309150506118ec565b8060ff1660f114156134645760319150506118ec565b8060ff1660f2141561347a5760329150506118ec565b8060ff1660f314156134905760339150506118ec565b8060ff1660f414156134a65760349150506118ec565b8060ff1660f514156134bc5760359150506118ec565b8060ff1660f614156134d25760369150506118ec565b8060ff1660f714156134e85760379150506118ec565b8060ff1660f814156134fe5760389150506118ec565b8060ff1660f914156135145760399150506118ec565b8060ff1660fa141561352a5760619150506118ec565b8060ff1660fb14156135405760629150506118ec565b8060ff1660fc14156135565760639150506118ec565b8060ff1660fd141561356c5760649150506118ec565b8060ff1660fe14156135825760659150506118ec565b8060ff1660ff14156135985760669150506118ec565b5091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345434453413a20696e76616c6964207369676e6174757265202773272076616c75652e20417474656d7074656420746f20696e646578206174206f6666736574203078496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c756554797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f636f7079546f202d204e756c6c20706f696e74657220646572656654797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e74657220646572656654797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a2646970667358221220eff35cdf524058dd4d26dc5272fa705e3c1c4fb98361155d05788c97994701d464736f6c63430007060033";

export class TestReplica__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReplica> {
    return super.deploy(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    ) as Promise<TestReplica>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    );
  }
  attach(address: string): TestReplica {
    return super.attach(address) as TestReplica;
  }
  connect(signer: Signer): TestReplica__factory {
    return super.connect(signer) as TestReplica__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReplicaInterface {
    return new utils.Interface(_abi) as TestReplicaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReplica {
    return new Contract(address, _abi, signerOrProvider) as TestReplica;
  }
}
